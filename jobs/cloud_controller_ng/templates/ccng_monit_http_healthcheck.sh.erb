#!/usr/bin/env bash
set -e

<%
  def discover_external_ip
    networks = spec.networks.marshal_dump

    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end

    if !network
      _, network = networks.first
    end

    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end

    network.ip
  end
%>

function log_failure {
  echo "$(date --rfc-3339=ns) :: Healthcheck failed consistently, restarting CC"
}

HOST=<%= p('cc.nginx.ip').empty? ? discover_external_ip : p('cc.nginx.ip') %>
PORT=<%= p("cc.public_tls.port") %>
PROTOCOL="https"
URL="https://${HOST}:${PORT}/healthz"

echo $(date --rfc-3339=ns) 'Will restart CC over on repeated failures'

trap log_failure EXIT

# if we fail to curl it 5 times in a row across 50 seconds, die so monit will restart us
while true; do
  set +e
  curl \
    -sS \
    --max-time <%= p('cc.api_health_check_timeout_per_retry') %> \
    --retry 5 \
    --retry-delay 10 \
    -A "ccng_monit_http_healthcheck" \
    -k \
    "${URL}" > /dev/null
  status=$?
  set -e
  if [[ $status > 0 ]] ; then
    echo $(date --rfc-3339=ns) "ccng_monit_http_healthcheck failed to curl <${URL}>: exit code $status"
    exit $status
  fi
  sleep 10
done
